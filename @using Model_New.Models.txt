@using Model_New.Models
@model List<Model_New.Models.QuestionsNew>
@{
    ViewData["Title"] = "Create Review";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container">
    <!-- Centered Box -->
    <div class="row justify-content-center">
        <div class="col-12 col-lg-10">
            <div class="card">
                <div class="card-header bg-secondary text-white text-center">
                    <h1>Review Products</h1>
                </div>
                <div class="card-body">
                    <!-- Progress Indicator -->
                    <div class="progress mb-4">
                        <div class="progress-bar" id="progressBar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                            @ViewBag.Progress%
                        </div>
                    </div>

                    <div class="row text-center">
                        <!-- Steps -->
                        <div class="col-6 col-md-4 col-lg-2 mb-3">
                            <div class="p-3 bg-success text-white rounded">
                                <div>
                                    <span class="badge badge-pill badge-light p-3" style="font-size:24px">1</span>
                                </div>
                                <h6 class="mt-2">DT & Outlet Details</h6>
                            </div>
                        </div>
                        <div class="col-6 col-md-4 col-lg-2 mb-3">
                            <div class="p-3 bg-primary text-white rounded">
                                <div>
                                    <span class="badge badge-pill badge-light p-3" style="font-size:24px">2</span>
                                </div>
                                <h6 class="mt-2">Pre-visit Review</h6>
                            </div>
                        </div>
                        <div class="col-6 col-md-4 col-lg-2 mb-3">
                            <div class="p-3 bg-warning text-dark rounded">
                                <div>
                                    <span class="badge badge-pill badge-light p-3" style="font-size:24px">3</span>
                                </div>
                                <h6 class="mt-2">Pre-visit Photo</h6>
                            </div>
                        </div>
                        <div class="col-6 col-md-4 col-lg-2 mb-3">
                            <div class="p-3 bg-info text-white rounded">
                                <div>
                                    <span class="badge badge-pill badge-light p-3" style="font-size:24px">4</span>
                                </div>
                                <h6 class="mt-2">Post-visit Review</h6>
                            </div>
                        </div>
                        <div class="col-6 col-md-4 col-lg-2 mb-3">
                            <div class="p-3 bg-danger text-white rounded">
                                <div>
                                    <span class="badge badge-pill badge-light p-3" style="font-size:24px">5</span>
                                </div>
                                <h6 class="mt-2">Post-visit Photo</h6>
                            </div>
                        </div>
                    </div>

                    <!-- Error Alert Box -->
                    <div id="errorAlert" class="alert alert-danger" role="alert" style="display:none;">
                        <ul id="errorMessages" class="mb-0"></ul>
                    </div>

                    <!-- Review Form -->
                    @if (ViewBag.SysUsers != null && ViewBag.SysUsers.Count > 0)
                    {
                        <form id="reviewForm" method="post" action="/ReviewPlane/Create" enctype="multipart/form-data">
                            <h3 class="text-center mb-4">Pre-visit Review</h3>

                            <div class="row gy-4">
                                <!-- Display Questions Dynamically Based on Step -->
                                @for (int i = 0; i < ViewBag.SysUsers.Count; i++)
                                {
                                    var user = ViewBag.SysUsers[i];
                                    <div class="col-12 col-md-6">
                                        <div class="form-group">
                                            <label>Question @(i + 1): @user.Question</label>  <!-- Add numbering to question label -->
                                            <input type="hidden" name="answers[@i].QuestionId" value="@user.QuestionId" />
                                            <input type="hidden" name="answers[@i].Type" value="@user.Type" />

                                            <!-- Conditional Input Types -->
                                            @if (user.Type == "radio")
                                            {
                                                <div class="form-check mb-2">
                                                    <input type="radio" class="form-check-input" id="yesOption_@i" name="answers[@i].Answer" value="Yes" />
                                                    <label class="form-check-label" for="yesOption_@i">Yes</label>
                                                </div>
                                                <div class="form-check">
                                                    <input type="radio" class="form-check-input" id="noOption_@i" name="answers[@i].Answer" value="No" />
                                                    <label class="form-check-label" for="noOption_@i">No</label>
                                                </div>
                                            }
                                            else if (user.Type == "text")
                                            {
                                                <input type="text" class="form-control" name="answers[@i].Answer" placeholder="Enter your answer" required />
                                            }
                                            else if (user.Type == "photo")
                                            {
                                                <input type="file" class="form-control photo-upload" name="answers[@i].PhotoPath" accept="image/*" />
                                            }
                                        </div>
                                    </div>
                                }
                            </div>

                            <div class="d-flex justify-content-between mt-4">
                                <a href="@Url.Action("AddbeforeReview", "ReviewPlane")" class="btn btn-secondary">Previous</a>
                                <button type="submit" class="btn btn-primary btn-lg" id="submitBtn">Next</button>
                            </div>
                        </form>
                    }
                    else
                    {
                        <p>No questions available for the selected criteria.</p>
                    }
                    @section Scripts {
                        <script>
                            let currentProgress = @ViewBag.Progress || 0;  // Start with initial progress (could be 0 or any value)
                            const progressIncrement = 20;  // Progress increment by 20% per step (5 steps total)
                            const totalSteps = 5;

                            // Update the progress bar based on the current progress value
                            function updateProgressBar() {
                                const progressBar = document.getElementById("progressBar");
                                progressBar.style.width = `${currentProgress}%`;
                                progressBar.setAttribute("aria-valuenow", currentProgress);
                                progressBar.innerText = `${currentProgress}%`;
                            }

                            // Validate form fields
                            function validateForm() {
                                let isValid = true;
                                let errorMessages = []; // Array to store all error messages
                                const form = document.getElementById("reviewForm");
                                const questions = form.querySelectorAll(".form-group");

                                // Check if all required text fields are filled
                                questions.forEach((question, index) => {
                                    const questionNumber = index + 1; // Add 1 to index for question number (starting from 1)
                                    const answerInput = question.querySelector("input[name='answers[" + index + "].Answer']");

                                    // Check if the question has a required text field and if it's filled
                                    if (answerInput && answerInput.hasAttribute("required") && answerInput.value.trim() === "") {
                                        isValid = false;
                                        errorMessages.push(`Please answer Question ${questionNumber}.`);
                                    }

                                    // Check if at least one radio button is selected for radio inputs
                                    if (question.querySelector("[name='answers[" + index + "].Answer'][type='radio']")) {
                                        const radios = question.querySelectorAll("[name='answers[" + index + "].Answer'][type='radio']");
                                        const isRadioSelected = Array.from(radios).some(radio => radio.checked);
                                        if (!isRadioSelected) {
                                            isValid = false;
                                            errorMessages.push(`Please select an option for Question ${questionNumber}.`);
                                        }
                                    }

                                    // Validate photo upload (if required)
                                    if (question.querySelector("input[type='file']")) {
                                        const fileInput = question.querySelector("input[type='file']");
                                        if (fileInput && fileInput.files.length === 0) {
                                            isValid = false;
                                            errorMessages.push(`Please upload a photo for Question ${questionNumber}.`);
                                        }
                                    }
                                });

                                // If there are any error messages, show them in a single alert
                                const errorAlert = document.getElementById("errorAlert");
                                const errorMessagesList = document.getElementById("errorMessages");

                                if (!isValid && errorMessages.length > 0) {
                                    errorAlert.style.display = 'block';
                                    errorMessagesList.innerHTML = errorMessages.map(msg => `<li>${msg}</li>`).join('');
                                } else {
                                    errorAlert.style.display = 'none'; // Hide alert if no errors
                                }

                                return isValid;
                            }

                            // Submit the form after validation
                            document.getElementById("reviewForm").onsubmit = function (event) {
                                if (!validateForm()) {
                                    event.preventDefault(); // Prevent form submission if validation fails
                                }
                            };

                            // Initial progress bar setup
                            updateProgressBar();
                        </script>
                    }

                   
                </div>
            </div>
        </div>
    </div>
</div>
