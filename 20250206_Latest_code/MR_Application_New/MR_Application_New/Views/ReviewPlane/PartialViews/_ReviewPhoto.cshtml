@model List<Model_New.Models.QuestionsNew>
@{
    ViewData["Title"] = "Review Plan";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<form id="reviewForm" method="post" action="/ReviewPlane/Create" enctype="multipart/form-data">
    <div class="container mt-5 p-4 border rounded shadow-lg bg-light">
        <!-- Step 1: Review Plan -->
        <div id="step-1">
            <h3 class="text-center mb-4 text-primary fw-bold border-bottom pb-2">
                Review Plan
            </h3>
            <div class="row g-4">
                <div class="col-md-6">
                    <div class="p-3 border rounded bg-white">
                        <label class="form-label fw-bold">MR Code:</label>
                        <input type="text" id="mrcodeInput" class="form-control" name="mrcode"
                               value="@Context.Session.GetString("UserName")" readonly>
                    </div>
                </div>

                <div class="col-md-6 position-relative">
                    <div class="p-3 border rounded bg-white">
                        <label class="form-label fw-bold">Select RSCODE:</label>
                        <input type="text" id="rscodeInput" class="form-control" placeholder="Type RSCODE ..." autocomplete="off">
                        <input type="hidden" id="selectedRscode" name="selectedRscode">
                        <div id="rscodeSuggestions" class="list-group position-absolute w-100" style="z-index: 1000; display: none;"></div>
                    </div>
                </div>

                <div class="col-md-6 position-relative">
                    <div class="p-3 border rounded bg-white">
                        <label class="form-label fw-bold">Search Outlet:</label>
                        <input type="text" id="outletInput" class="form-control" placeholder="Type to search..." autocomplete="off">
                        <input type="hidden" id="selectedOutlet" name="selectedOutlet">
                        <div id="outletSuggestions" class="list-group position-absolute w-100" style="z-index: 1000; display: none;"></div>
                    </div>
                </div>
            </div>

            <div class="text-center mt-4">
                <button type="button" class="btn btn-primary btn-lg" id="nextStep1">Next</button>
            </div>
        </div>

        <!-- Step 2: Pre-visit Products -->
        <div id="step-2" style="display: none;">
            <h3 class="text-center mb-4 text-primary fw-bold border-bottom pb-2">
                Pre-visit Products
            </h3>
            <div class="row g-4">
                <div id="questionContainer">
                    <!-- Questions will be loaded dynamically here -->
                </div>
            </div>

            <div class="d-flex justify-content-between mt-4">
                <button type="button" class="btn btn-outline-secondary btn-lg" id="prevStep2">Previous</button>
                <button type="button" class="btn btn-primary btn-lg" id="nextStep2">Next</button>
            </div>
        </div>

        <!-- Step 3: Post-visit Products -->
        <div id="step-3" style="display: none;">
            <h3 class="text-center mb-4 text-primary fw-bold border-bottom pb-2">
                Post-visit Products
            </h3>
            <div class="row g-4">
                <div id="postqsnContainer">
                    <!-- Questions will be loaded dynamically here -->
                </div>
            </div>

            <div class="d-flex justify-content-between mt-4">
                <button type="button" class="btn btn-outline-secondary btn-lg" id="prevStep3">Previous</button>
                <button type="submit" class="btn btn-primary btn-lg">Submit</button>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Handle fetching RSCODE suggestions
            $("#rscodeInput").on("keyup", function () {
                var searchTerm = $(this).val();
                if (searchTerm.length > 0) {
                    $.get('/ReviewPlane/GetRSCodes', { term: searchTerm }, function (data) {
                        $("#rscodeSuggestions").empty().show();
                        data.forEach(item => {
                            $("#rscodeSuggestions").append(
                                `<a class="list-group-item list-group-item-action p-2" data-id="${item.code}" data-name="${item.name}">
                                                        <strong>${item.code}</strong> - ${item.name}
                                                    </a>`
                            );
                        });
                    });
                } else {
                    $("#rscodeSuggestions").hide();
                }
            });

            $(document).on("click", "#rscodeSuggestions .list-group-item", function () {
                $("#rscodeInput").val($(this).data("id") + " - " + $(this).data("name"));
                $("#selectedRscode").val($(this).data("id"));
                $("#rscodeSuggestions").hide();
            });

            // Handle fetching Outlet suggestions
            $("#outletInput").on("keyup", function () {
                var searchTerm = $(this).val();
                var rscode = $("#selectedRscode").val();
                if (searchTerm.length > 2 && rscode) {
                    $.get('/ReviewPlane/GetOutlets', { term: searchTerm, rscode: rscode }, function (data) {
                        $("#outletSuggestions").empty().show();
                        data.forEach(item => {
                            $("#outletSuggestions").append(
                                `<a class="list-group-item list-group-item-action p-2" data-code="${item.code}" data-name="${item.name}">${item.name} (${item.code})</a>`
                            );
                        });
                    });
                } else {
                    $("#outletSuggestions").hide();
                }
            });

            $(document).on("click", "#outletSuggestions .list-group-item", function () {
                $("#outletInput").val($(this).data("name") + " (" + $(this).data("code") + ")");
                $("#selectedOutlet").val($(this).data("code"));
                $("#outletSuggestions").hide();
            });

            // Step 1: Next button to load questions
            $("#nextStep1").click(function () {
                var rscode = $("#selectedRscode").val();
                var mrCode = $("#mrcodeInput").val();
                var outlet = $("#selectedOutlet").val();

                if (!rscode || !mrCode || !outlet) {
                    alert("Please fill out RSCODE, MR Code, and Outlet to proceed.");
                    return;
                }

                $.get('/ReviewPlane/GetQuestions', { rscode: rscode, mrCode: mrCode, outlet: outlet }, function (data) {
                    if (data && data.length > 0) {
                        var questionContainer = $('#questionContainer');
                        questionContainer.empty();
                        data.forEach(function (question, index) {
                            var questionHtml = `<div class="col-md-6">
                                                            <div class="p-3 border rounded bg-white">
                                                                <label class="fw-bold">Question ${index + 1}: ${question.question}</label>
                                                                <input type="hidden" name="answers[${index}].QuestionId" value="${question.questionId}" />
                                                                <input type="hidden" name="answers[${index}].Type" value="${question.type}" />`;

                            if (question.type === "radio") {
                                var yesChecked = (question.selectedAnswer === 'Yes') ? 'checked' : '';
                                var noChecked = (question.selectedAnswer === 'No') ? 'checked' : '';
                                questionHtml += `
                                                <div class="form-check">
                                                    <input type="radio" class="form-check-input" name="answers[${index}].Answer" value="Yes" ${yesChecked} />
                                                    <label class="form-check-label">Yes</label>
                                                </div>
                                                <div class="form-check">
                                                    <input type="radio" class="form-check-input" name="answers[${index}].Answer" value="No" ${noChecked} />
                                                    <label class="form-check-label">No</label>
                                                </div>`;
                            } else if (question.type === "text") {
                                questionHtml += `<input type="text" class="form-control" name="answers[${index}].Answer" value="${question.selectedAnswer}" required />`;
                            } else if (question.type === "photo") {
                                questionHtml += `<input type="file" class="form-control" name="answers[${index}].PhotoPath" accept="image/*" />`;
                            }

                            questionHtml += `</div></div>`;
                            questionContainer.append(questionHtml);
                        });

                        // Go to Step 2
                        $("#step-1").fadeOut(300, function () {
                            $("#step-2").fadeIn(300);
                        });
                    } else {
                        alert("No questions found.");
                    }
                }).fail(function () {
                    alert("Error loading questions.");
                });
            });

            // Step 2: Previous and Next buttons to navigate between steps
            $("#nextStep2").click(function () {
                var rscode = $("#selectedRscode").val();
                var mrCode = $("#mrcodeInput").val();
                var outlet = $("#selectedOutlet").val();

                $.get('/ReviewPlane/postQuestions', { rscode: rscode, mrCode: mrCode, outlet: outlet }, function (data) {
                    if (data && data.length > 0) {
                        var postqsnContainer = $('#postqsnContainer');
                        postqsnContainer.empty();

                        data.forEach(function (question, index) {
                            var questionHtml = `<div class="col-md-6">
                                            <div class="p-3 border rounded bg-white">
                                                <label class="fw-bold">Question ${index + 1}: ${question.question}</label>
                                                <input type="hidden" name="Postanswer[${index}].QuestionId" value="${question.questionId}" />
                                                <input type="hidden" name="Postanswer[${index}].Type" value="${question.type}" />`;

                            if (question.type === "radio") {
                                var yesChecked = question.selectedAnswer === 'Yes' ? 'checked' : '';
                                var noChecked = question.selectedAnswer === 'No' ? 'checked' : '';
                                questionHtml += `
                                                <div class="form-check">
                                                    <input type="radio" class="form-check-input" id="answerYes${index}" name="Postanswer[${index}].Answer" value="Yes" ${yesChecked} />
                                                    <label class="form-check-label" for="answerYes${index}">Yes</label>
                                                </div>
                                                <div class="form-check">
                                                    <input type="radio" class="form-check-input" id="answerNo${index}" name="Postanswer[${index}].Answer" value="No" ${noChecked} />
                                                    <label class="form-check-label" for="answerNo${index}">No</label>
                                                </div>`;
                            } else if (question.type === "text") {
                                questionHtml += `<input type="text" class="form-control" name="Postanswer[${index}].Answer" value="${question.selectedAnswer || ''}" required />`;
                            } else if (question.type === "photo") {
                                questionHtml += `<input type="file" class="form-control" name="Postanswer[${index}].PhotoPath" accept="image/*" />`;
                            }

                            questionHtml += `</div></div>`;
                            postqsnContainer.append(questionHtml);
                        });

                        // Go to Step 3
                        $("#step-2").fadeOut(300, function () {
                            $("#step-3").fadeIn(300);
                        });
                    }
                }).fail(function () {
                    alert("Error loading questions.");
                });
            });

            // Step 3: Previous button
            $("#prevStep3").click(function () {
                $("#step-3").fadeOut(300, function () {
                    $("#step-2").fadeIn(300);
                });
            });

            // Collect answers and submit the form
            $("form#reviewForm").submit(function (e) {
                e.preventDefault();
                var step2Answers = [];
                var step3Answers = [];
                var empNo = $("#mrcodeInput").val();
                var rscode = $("#selectedRscode").val();
                var outlet = $("#selectedOutlet").val();
                var createdAt = new Date().toISOString();  // Current time as CreatedAt

                // Function to collect answers
                function collectAnswers(stepSelector, answersArray) {
                    $(stepSelector + " .p-3").each(function () {
                        // Find questionId based on either 'answers' or 'postanswers'
                        var questionId = $(this).find("input[name^='answers[']").val() || $(this).find("input[name^='postanswers[']").val();

                        if (questionId) {
                            // Initialize variables for storing answer data
                            var type = null;
                            var answer = null;
                            var photoData = null;

                            // Loop through the inputs inside the current element
                            $(this).find("input").each(function () {
                                var name = $(this).attr("name");

                                // Check if the name includes "Type" and store the type of the input
                                if (name.includes("Type")) {
                                    type = $(this).val();
                                }

                                // Handle answer inputs, including radio button selections and regular inputs
                                if (name.includes("Answer")) {
                                    if ($(this).attr('type') === 'radio' && $(this).prop('checked')) {
                                        answer = $(this).val();
                                    } else if ($(this).attr('type') !== 'radio') {
                                        answer = $(this).val();
                                    }
                                }

                                // If the type is 'photo', handle file input
                                if (type === 'photo') {
                                    var photoInput = $(this).find("input[type='file']")[0];
                                    if (photoInput && photoInput.files && photoInput.files[0]) {
                                        var file = photoInput.files[0];
                                        photoData = file.name;
                                    }
                                }
                            });

                            // Push the data to answersArray based on whether the input is from 'answers' or 'postanswers'
                            if (name.includes('answers')) {
                                answersArray.push({
                                    QuestionId: questionId,
                                    Type: type,
                                    Answer: answer,
                                    PhotoData: photoData,
                                    EmpNo: empNo,
                                    Rscode: rscode,
                                    Outlet: outlet,
                                    CreatedAt: createdAt
                                });
                            } else if (name.includes('postanswers')) {
                                // Handle postanswers case (this could be different if you need to handle the data differently)
                                postAnswersArray.push({
                                    QuestionId: questionId,
                                    Type: type,
                                    Answer: answer,
                                    PhotoData: photoData,
                                    EmpNo: empNo,
                                    Rscode: rscode,
                                    Outlet: outlet,
                                    CreatedAt: createdAt
                                });
                            }

                        } else {
                            // Handle case where no questionId is found
                            console.log('QuestionId not found for this entry.');
                        }

                    });
                }

                // Collect answers from Step 2 and Step 3
                collectAnswers("div[id^='step-2']", step2Answers);
                collectAnswers("div[id^='step-3']", step3Answers);

                console.log("Step 2 Answers: ", step2Answers);
                console.log("Step 3 Answers: ", step3Answers);

                // Combine answers from Step 2 and Step 3 into one array
                var allAnswers = step2Answers.concat(step3Answers);

                // Check if answers are collected
                if (allAnswers.length > 0) {
                    console.log(allAnswers);  // log the final answers
                    $.post('/ReviewPlane/SubmitAnswers', { answers: allAnswers })
                        .done(function (response) {
                            alert("Answers submitted successfully!");
                        })
                        .fail(function () {
                            alert("An error occurred while submitting the answers.");
                        });
                } else {
                    alert("No answers to submit.");
                }
            });
        });
    </script>
}

