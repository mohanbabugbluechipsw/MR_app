// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model_New.Models;

#nullable disable

namespace Model_New.Migrations
{
    [DbContext(typeof(MrAppDbNewContext))]
    [Migration("20250206091322_MigrationName")]
    partial class MigrationName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Model_New.Models.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AttendanceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceId"));

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("MarkIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("MarkOut")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("AttendanceId")
                        .HasName("PK__Attendan__8B69263C6D6FD9BA");

                    b.HasIndex("UserId");

                    b.ToTable("Attendance", (string)null);
                });

            modelBuilder.Entity("Model_New.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("CategoryId")
                        .HasName("PK__Categori__19093A2BF703F80D");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Model_New.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Model_New.Models.MrReview", b =>
                {
                    b.Property<int>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AnswerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnswerId"));

                    b.Property<string>("AnswerValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Distributor")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PartyHllcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PartyMasterCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PartyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("SubmittedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UserQuestionId")
                        .HasColumnType("int")
                        .HasColumnName("UserQuestionID");

                    b.HasKey("AnswerId")
                        .HasName("PK__MR_Revie__D48250243572B5B8");

                    b.HasIndex("UserQuestionId");

                    b.ToTable("MR_Review", (string)null);
                });

            modelBuilder.Entity("Model_New.Models.Option", b =>
                {
                    b.Property<int>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OptionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OptionId"));

                    b.Property<string>("Distributor")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("OptionText")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PartyHllcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PartyMasterCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PartyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("QuestionID");

                    b.HasKey("OptionId")
                        .HasName("PK__Options__92C7A1DFBD08DEAA");

                    b.HasIndex("QuestionId");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("Model_New.Models.OutLetMasterDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address2")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address3")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address4")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18, 10)")
                        .HasColumnName("LATITUDE");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18, 10)")
                        .HasColumnName("LONGITUDE");

                    b.Property<DateTime?>("OlCreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("OL_CREATED_DATE");

                    b.Property<string>("ParStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PAR_STATUS");

                    b.Property<string>("PartyHllcode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PartyHLLCode");

                    b.Property<string>("PartyMasterCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PartyName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PrimaryChannel")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PrimarychannelCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Primarychannel_Code");

                    b.Property<string>("RsName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RS_NAME");

                    b.Property<int?>("Rscode")
                        .HasColumnType("int")
                        .HasColumnName("RSCODE");

                    b.Property<string>("SecondaryChannel")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SecondarychannelCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Secondarychannel_Code");

                    b.Property<TimeOnly?>("UpdateStamp")
                        .HasColumnType("time")
                        .HasColumnName("UPDATE_STAMP");

                    b.HasKey("Id")
                        .HasName("PK__OutLetMa__3214EC0746EEAAAD");

                    b.ToTable("OutLetMaster_Details", (string)null);
                });

            modelBuilder.Entity("Model_New.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QuestionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<int?>("BeforeAfter")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Distributor")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("OptionType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PartyHllcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PartyMasterCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PartyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionId")
                        .HasName("PK__Question__0DC06F8C3CE612FB");

                    b.HasIndex("CategoryId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Model_New.Models.QuestionOption", b =>
                {
                    b.Property<int>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OptionId"));

                    b.Property<string>("OptionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("OptionId")
                        .HasName("PK__Question__92C7A1FF68718DA1");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionOptions");
                });

            modelBuilder.Entity("Model_New.Models.QuestionsNew", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<bool>("Ba")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Distributor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyHllcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyMasterCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("QuestionId")
                        .HasName("PK__Question__0DC06FACEE48D9DC");

                    b.ToTable("QuestionsNew", (string)null);
                });

            modelBuilder.Entity("Model_New.Models.ReviewAnswer", b =>
                {
                    b.Property<int>("ReviewAnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewAnswerId"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("EmpNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Outlet")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhotoFilePath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Rscode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SelectedOptions")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReviewAnswerId")
                        .HasName("PK__ReviewAn__B480D9B7F71AEDAD");

                    b.HasIndex("QuestionId");

                    b.ToTable("ReviewAnswers");
                });

            modelBuilder.Entity("Model_New.Models.ReviewsPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("EmpNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhotoPath1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhotoPath2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhotoPath3")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Question1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Question2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Question3")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Rscode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RSCode");

                    b.Property<string>("SelectedOutlet")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Reviews__3214EC07D383965F");

                    b.ToTable("ReviewsPhoto", (string)null);
                });

            modelBuilder.Entity("Model_New.Models.ShopDisplaySurvey", b =>
                {
                    b.Property<int>("SurveyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SurveyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SurveyId"));

                    b.Property<bool?>("AreBrandVariantsSeparate")
                        .HasColumnType("bit");

                    b.Property<bool?>("AreNonUnileverBrandsBetween")
                        .HasColumnType("bit");

                    b.Property<bool?>("AreUnileverBrandsSeparate")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayOption")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("DisplayPhotoAfter")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("DisplayPhotoBefore")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("EmpEmail")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Empno")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EMPNO");

                    b.Property<bool?>("EnhancedVisibilityAfter")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsArrangementAdequateBefore")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDisplayVisible")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUnileverShelfStripAvailable")
                        .HasColumnType("bit");

                    b.Property<bool?>("MissingItemsBefore")
                        .HasColumnType("bit");

                    b.Property<bool?>("NewProductsAddedAfter")
                        .HasColumnType("bit");

                    b.Property<string>("PartyHllcode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PartyHLLCode");

                    b.Property<string>("PartyMasterCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PartyName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("RearrangementDoneAfter")
                        .HasColumnType("bit");

                    b.Property<string>("RsName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RS_NAME");

                    b.Property<int>("Rscid")
                        .HasColumnType("int")
                        .HasColumnName("RSCID");

                    b.Property<int?>("Rscode")
                        .HasColumnType("int")
                        .HasColumnName("RSCODE");

                    b.Property<DateTime?>("SurveyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("SurveyId")
                        .HasName("PK__ShopDisp__A5481F9D8DBF421B");

                    b.HasIndex("Rscid");

                    b.HasIndex("UserId");

                    b.ToTable("ShopDisplaySurvey", (string)null);
                });

            modelBuilder.Entity("Model_New.Models.TblChannelMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Element")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Master_Channel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sub_channel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sub_element")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("tblChannelMasters");
                });

            modelBuilder.Entity("Model_New.Models.TblDepartment", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("DepartmentId")
                        .HasName("PK__Tbl_Depa__B2079BEDB4296274");

                    b.ToTable("Tbl_Department", (string)null);
                });

            modelBuilder.Entity("Model_New.Models.TblDistributor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Distributor")
                        .HasColumnType("int");

                    b.Property<string>("DistributorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Distributor_Name");

                    b.HasKey("Id")
                        .HasName("PK__Tbl_Dist__3214EC07E4640F3C");

                    b.ToTable("Tbl_Distributor", (string)null);
                });

            modelBuilder.Entity("Model_New.Models.TblMrmaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BpCode")
                        .HasColumnType("int")
                        .HasColumnName("BP_Code");

                    b.Property<string>("BpName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("BP_Name");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("Date_Of_Birth");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("EMail_Address");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Mobile_Number");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("Nic")
                        .HasColumnType("float")
                        .HasColumnName("NIC");

                    b.Property<string>("Position")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TshirtSize")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TShirt_Size");

                    b.HasKey("Id")
                        .HasName("PK__Tbl_MRMa__3214EC077CF0AE54");

                    b.ToTable("Tbl_MRMaster", (string)null);
                });

            modelBuilder.Entity("Model_New.Models.TblOfficeLocation", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("LocationId")
                        .HasName("PK__Tbl_Offi__E7FEA497DC008CF0");

                    b.ToTable("Tbl_OfficeLocation", (string)null);
                });

            modelBuilder.Entity("Model_New.Models.TblReviewAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpNo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Outlet")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("PhotoData")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Rscode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Tbl_Revi__3214EC0787BD8212");

                    b.ToTable("Tbl_ReviewAnswers", (string)null);
                });

            modelBuilder.Entity("Model_New.Models.TblSalesRep", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("action");

                    b.Property<int>("Active")
                        .HasColumnType("int")
                        .HasColumnName("active");

                    b.Property<int?>("BpCode")
                        .HasColumnType("int")
                        .HasColumnName("bp_code");

                    b.Property<string>("JoinedDate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("joined_date");

                    b.Property<string>("Nic")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nic");

                    b.Property<string>("RepCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("rep_code");

                    b.Property<string>("RepName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("rep_name");

                    b.Property<string>("UslReference")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("usl_reference");

                    b.HasKey("Id")
                        .HasName("PK__Tbl_sale__3213E83F5105013B");

                    b.ToTable("Tbl_sales_rep", (string)null);
                });

            modelBuilder.Entity("Model_New.Models.TblSystemUser", b =>
                {
                    b.Property<int>("SystemUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SystemUserId"));

                    b.Property<string>("EmpNo")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<int?>("InHistory")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("SystemUserId")
                        .HasName("PK__Tbl_Syst__8788C295B9C08C11");

                    b.HasIndex("UserTypeId");

                    b.HasIndex(new[] { "EmpNo" }, "UQ_EmpNo")
                        .IsUnique();

                    b.ToTable("Tbl_SystemUser", (string)null);
                });

            modelBuilder.Entity("Model_New.Models.TblUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("CostCenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EmpEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EmpName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LineManager")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LineManagerEmail")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("PayeeId")
                        .HasColumnType("int");

                    b.Property<string>("SalGrade")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("WorkLevelId")
                        .HasColumnType("int");

                    b.HasKey("UserId")
                        .HasName("PK__Tbl_User__1788CC4C9F12E7F0");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("LocationId");

                    b.HasIndex("WorkLevelId");

                    b.ToTable("Tbl_User", (string)null);
                });

            modelBuilder.Entity("Model_New.Models.TblUserType", b =>
                {
                    b.Property<int>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserTypeId"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("UserTypeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserTypeId")
                        .HasName("PK__Tbl_User__40D2D816ED87254C");

                    b.ToTable("Tbl_UserType", (string)null);
                });

            modelBuilder.Entity("Model_New.Models.TblUslworkLevel", b =>
                {
                    b.Property<int>("Wlid")
                        .HasColumnType("int")
                        .HasColumnName("WLId");

                    b.Property<string>("Wl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("WL");

                    b.Property<int>("Wlstatus")
                        .HasColumnType("int")
                        .HasColumnName("WLStatus");

                    b.HasKey("Wlid")
                        .HasName("PK__Tbl_USLW__F973E5E277F59662");

                    b.ToTable("Tbl_USLWorkLevel", (string)null);
                });

            modelBuilder.Entity("Model_New.Models.UserQuestion", b =>
                {
                    b.Property<int>("UserQuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserQuestionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserQuestionId"));

                    b.Property<string>("AnswerValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Distributor")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PartyHllcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PartyMasterCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PartyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("QuestionID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("UserQuestionId")
                        .HasName("PK__UserQues__225F9E73C279763A");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserQuestions");
                });

            modelBuilder.Entity("Model_New.Models.Attendance", b =>
                {
                    b.HasOne("Model_New.Models.TblUser", "User")
                        .WithMany("Attendances")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Attendanc__UserI__2645B050");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model_New.Models.MrReview", b =>
                {
                    b.HasOne("Model_New.Models.UserQuestion", "UserQuestion")
                        .WithMany("MrReviews")
                        .HasForeignKey("UserQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__MR_Review__UserQ__67DE6983");

                    b.Navigation("UserQuestion");
                });

            modelBuilder.Entity("Model_New.Models.Option", b =>
                {
                    b.HasOne("Model_New.Models.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Options__Questio__5F492382");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Model_New.Models.Question", b =>
                {
                    b.HasOne("Model_New.Models.Category", "Category")
                        .WithMany("Questions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Questions__Categ__589C25F3");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Model_New.Models.QuestionOption", b =>
                {
                    b.HasOne("Model_New.Models.QuestionsNew", "Question")
                        .WithMany("QuestionOptions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__QuestionO__Quest__2057CCD0");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Model_New.Models.ReviewAnswer", b =>
                {
                    b.HasOne("Model_New.Models.QuestionsNew", "Question")
                        .WithMany("ReviewAnswers")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK__ReviewAns__Quest__2704CA5F");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Model_New.Models.ShopDisplaySurvey", b =>
                {
                    b.HasOne("Model_New.Models.OutLetMasterDetail", "Rsc")
                        .WithMany("ShopDisplaySurveys")
                        .HasForeignKey("Rscid")
                        .IsRequired()
                        .HasConstraintName("FK_ShopDisplaySurvey_OutletMaster");

                    b.HasOne("Model_New.Models.TblUser", "User")
                        .WithMany("ShopDisplaySurveys")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_ShopDisplaySurvey_Salesperson");

                    b.Navigation("Rsc");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model_New.Models.TblSystemUser", b =>
                {
                    b.HasOne("Model_New.Models.TblUserType", "UserType")
                        .WithMany("TblSystemUsers")
                        .HasForeignKey("UserTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_UserType");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("Model_New.Models.TblUser", b =>
                {
                    b.HasOne("Model_New.Models.TblDepartment", "Department")
                        .WithMany("TblUsers")
                        .HasForeignKey("DepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK__Tbl_User__Depart__6477ECF3");

                    b.HasOne("Model_New.Models.TblOfficeLocation", "Location")
                        .WithMany("TblUsers")
                        .HasForeignKey("LocationId")
                        .IsRequired()
                        .HasConstraintName("FK__Tbl_User__Locati__66603565");

                    b.HasOne("Model_New.Models.TblUslworkLevel", "WorkLevel")
                        .WithMany("TblUsers")
                        .HasForeignKey("WorkLevelId")
                        .HasConstraintName("FK__Tbl_User__WorkLe__68487DD7");

                    b.Navigation("Department");

                    b.Navigation("Location");

                    b.Navigation("WorkLevel");
                });

            modelBuilder.Entity("Model_New.Models.UserQuestion", b =>
                {
                    b.HasOne("Model_New.Models.Question", "Question")
                        .WithMany("UserQuestions")
                        .HasForeignKey("QuestionId")
                        .HasConstraintName("FK__UserQuest__Quest__640DD89F");

                    b.HasOne("Model_New.Models.TblUser", "User")
                        .WithMany("UserQuestions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserQuest__UserI__6319B466");

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model_New.Models.Category", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Model_New.Models.OutLetMasterDetail", b =>
                {
                    b.Navigation("ShopDisplaySurveys");
                });

            modelBuilder.Entity("Model_New.Models.Question", b =>
                {
                    b.Navigation("Options");

                    b.Navigation("UserQuestions");
                });

            modelBuilder.Entity("Model_New.Models.QuestionsNew", b =>
                {
                    b.Navigation("QuestionOptions");

                    b.Navigation("ReviewAnswers");
                });

            modelBuilder.Entity("Model_New.Models.TblDepartment", b =>
                {
                    b.Navigation("TblUsers");
                });

            modelBuilder.Entity("Model_New.Models.TblOfficeLocation", b =>
                {
                    b.Navigation("TblUsers");
                });

            modelBuilder.Entity("Model_New.Models.TblUser", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("ShopDisplaySurveys");

                    b.Navigation("UserQuestions");
                });

            modelBuilder.Entity("Model_New.Models.TblUserType", b =>
                {
                    b.Navigation("TblSystemUsers");
                });

            modelBuilder.Entity("Model_New.Models.TblUslworkLevel", b =>
                {
                    b.Navigation("TblUsers");
                });

            modelBuilder.Entity("Model_New.Models.UserQuestion", b =>
                {
                    b.Navigation("MrReviews");
                });
#pragma warning restore 612, 618
        }
    }
}
